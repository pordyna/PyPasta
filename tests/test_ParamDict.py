
# Generated by CodiumAI

from pypasta.ParamDict import ParamDict
from pypasta import ureg
import pytest
import pint

class TestParamDict:

    #  initialization with consistent lengths and pint.Quantity values
    def test_initialization_with_consistent_lengths_and_pint_quantity_values(self):
        data = {
            'param1': ureg.Quantity([1, 2, 3], 'meter'),
            'param2': ureg.Quantity([4, 5, 6], 'second')
        }
        param_dict = ParamDict(data)
        assert isinstance(param_dict, ParamDict)
        assert param_dict.n_samples == 3
        assert all(isinstance(value, pint.Quantity) for value in param_dict.values())

    #  initialization with inconsistent lengths for different keys
    def test_initialization_with_inconsistent_lengths_for_different_keys(self):
        data = {
            'param1': ureg.Quantity([1, 2, 3], 'meter'),
            'param2': ureg.Quantity([4, 5], 'second')
        }
        with pytest.raises(AssertionError):
            ParamDict(data)
